# Android
# Build your Android project with Gradle.
# Add steps that test, sign, and distribute the APK, save build artifacts, and more:
# https://docs.microsoft.com/vsts/pipelines/languages/android

trigger:
  - master

pool:
  vmImage: 'windows-latest'

variables:
  GRADLE_USER_HOME: $(Pipeline.Workspace)/.gradle
  repositoryName: Account-Ledger-Android-Client
  # Secret Variables
#  MAPPED_FTP_HOST: $(FTP_HOST)
#  MAPPED_FTP_USER: $(FTP_USER)
#  MAPPED_FTP_PWD: $(FTP_PWD)

steps:
  - checkout: self
    submodules: recursive

  - task: Cache@2.198.0
    inputs:
      key: 'gradleUserHome | "$(Agent.OS)"'
      restoreKeys: gradleUserHome
      path: $(GRADLE_USER_HOME)
    displayName: Gradle User Home Cache

#  - task: Cache@2
#    inputs:
#      key: 'projectSpecificGradleCache | "$(Agent.OS)"'
#      restoreKeys: projectSpecificGradleCache
#      path: $(Build.SourcesDirectory)/.gradle
#    displayName: Project Specific Gradle Cache

#  - task: Cache@2
#    inputs:
#      key: 'projectSpecificBuildFolder | "$(Agent.OS)"'
#      restoreKeys: projectSpecificBuildFolder
#      path: $(Build.SourcesDirectory)/build
#    displayName: Project Specific Build Folder Cache

  - task: JavaToolInstaller@0
    inputs:
      versionSpec: '11'
      jdkArchitectureOption: 'x64'
      jdkSourceOption: 'PreInstalled'

#  - task: Gradle@2
#    displayName: 'Gradle assembleDevelopmentDebug : Android APK'
#    inputs:
#      # TODO : Add build scan, upload build scan results
#      gradleOptions: '-Xmx3072m'
#      tasks: 'assembleDevelopmentDebug'

  - task: Gradle@2.208.0
    displayName: 'Gradle assembleProductionRelease : Android APK'
    inputs:
      # TODO : Add build scan, upload build scan results
      gradleOptions: '-Xmx3072m'
      tasks: 'assembleProductionRelease'
      
  - script: 'gradlew --stop'
    displayName: Stop Gradle Daemon

#  # Upload Executable APK File
#  - task: FtpUpload@2
#    displayName: 'FTP Upload $(repositoryName) APK File'
#    inputs:
#      credentialsOption: inputs
#      serverUrl: 'ftp://$(MAPPED_FTP_HOST)'
#      username: $(MAPPED_FTP_USER)
#      password: $(MAPPED_FTP_PWD)
#      # TODO : Add option for file instead of directory
#      rootDirectory: 'app/build/outputs/apk'
#      remoteDirectory: '/public_html/files/$(repositoryName)/$(Build.SourceVersion)'

#   - publish: build/outputs/apk/production/release/app-production-release.apk
#     artifact: $(repositoryName)
